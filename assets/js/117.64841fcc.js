(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{599:function(t,a,r){"use strict";r.r(a);var s=r(2),v=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[t._v("滑动窗口类型的题目经常是用来执行数组或是链表上某个区间（窗口）上的操作。比如找最长的全为1的子数组长度。滑动窗口一般从第一个元素开始，一直往右边一个一个元素挪动。")]),t._v(" "),a("h2",{attrs:{id:"分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),a("h3",{attrs:{id:"窗口大小不可变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#窗口大小不可变"}},[t._v("#")]),t._v(" 窗口大小不可变")]),t._v(" "),a("h3",{attrs:{id:"窗口大小可变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#窗口大小可变"}},[t._v("#")]),t._v(" 窗口大小可变")]),t._v(" "),a("p",[t._v("对于可变窗口，我们同样固定初始化左右指针 l 和 r，分别表示的窗口的左右顶点。后面有所不同，我们需要保证：")]),t._v(" "),a("ol",[a("li",[t._v("l 和 r 都初始化为 0")]),t._v(" "),a("li",[t._v("r 指针移动一步")]),t._v(" "),a("li",[t._v("判断窗口内的连续元素是否满足题目限定的条件\n"),a("ul",[a("li",[t._v("如果满足，再判断是否需要更新最优解，如果需要则更新最优解。并尝试通过移动 l 指针缩小窗口大小。循环执行 3.1")]),t._v(" "),a("li",[t._v("如果不满足，则继续。")])])])]),t._v(" "),a("p",[t._v("形象地来看的话，就是 r 指针不停向右移动，l 指针仅仅在窗口满足条件之后才会移动，起到窗口收缩的效果。")])])}),[],!1,null,null,null);a.default=v.exports}}]);