(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{528:function(n,s,a){"use strict";a.r(s);var e=a(2),t=Object(e.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h2",{attrs:{id:"对象的创建模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的创建模式"}},[n._v("#")]),n._v(" 对象的创建模式")]),n._v(" "),s("ul",[s("li",[n._v("Object构造函数模式"),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("var obj = {};\nobj.name = 'Tom'\nobj.setName = function(name){this.name=name}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br")])])]),n._v(" "),s("li",[n._v("对象字面量模式"),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("var obj = {\n  name : 'Tom',\n  setName : function(name){this.name = name}\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])])]),n._v(" "),s("li",[n._v("构造函数模式"),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function Person(name, age) {\n  this.name = name;\n  this.age = age;\n  this.setName = function(name){this.name=name;};\n}\nnew Person('tom', 12);\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br")])])]),n._v(" "),s("li",[n._v("构造函数+原型的组合模式"),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function Person(name, age) {\n  this.name = name;\n  this.age = age;\n}\nPerson.prototype.setName = function(name){this.name=name;};\nnew Person('tom', 12);\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br")])])])]),n._v(" "),s("h2",{attrs:{id:"继承模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#继承模式"}},[n._v("#")]),n._v(" 继承模式")]),n._v(" "),s("ul",[s("li",[n._v("原型链继承 : 得到方法"),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function Parent(){}\nParent.prototype.test = function(){};\nfunction Child(){}\nChild.prototype = new Parent(); // 子类型的原型指向父类型实例\nChild.prototype.constructor = Child\nvar child = new Child(); //有test()\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br")])])]),n._v(" "),s("li",[n._v("借用构造函数 : 得到属性"),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function Parent(xxx){this.xxx = xxx}\nParent.prototype.test = function(){};\nfunction Child(xxx,yyy){\n    Parent.call(this, xxx);//借用构造函数   this.Parent(xxx)\n}\nvar child = new Child('a', 'b');  //child.xxx为'a', 但child没有test()\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br")])])]),n._v(" "),s("li",[n._v("组合"),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function Parent(xxx){this.xxx = xxx}\nParent.prototype.test = function(){};\nfunction Child(xxx,yyy){\n    Parent.call(this, xxx);//借用构造函数   this.Parent(xxx)\n}\nChild.prototype = new Parent(); //得到test()\nvar child = new Child(); //child.xxx为'a', 也有test()\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br")])])]),n._v(" "),s("li",[n._v("new一个对象背后做了些什么?\n"),s("ul",[s("li",[n._v("创建一个空对象")]),n._v(" "),s("li",[n._v("给对象设置__proto__, 值为构造函数对象的prototype属性值   this."),s("code",[n._v("__proto__")]),n._v("  = Fn.prototype")]),n._v(" "),s("li",[n._v("执行构造函数体(给对象添加属性/方法)")])])])])])}),[],!1,null,null,null);s.default=t.exports}}]);