(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{576:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[t._v("#")]),t._v(" 题目")]),t._v(" "),a("blockquote",[a("p",[t._v("You are climbing a staircase. It takes n steps to reach the top.\nEach time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?")])]),t._v(" "),a("h4",{attrs:{id:"example1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example1"}},[t._v("#")]),t._v(" Example1 :")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("Input: n = 2")]),t._v(" "),a("li",[t._v("Output: 2")]),t._v(" "),a("li",[t._v("Explanation: There are two ways to climb to the top.")])]),t._v(" "),a("ol",[a("li",[t._v("1 step + 1 step")]),t._v(" "),a("li",[t._v("2 steps")])])]),t._v(" "),a("h4",{attrs:{id:"example-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-2"}},[t._v("#")]),t._v(" Example 2:")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("Input: n = 3")]),t._v(" "),a("li",[t._v("Output: 3")]),t._v(" "),a("li",[t._v("Explanation: There are three ways to climb to the top.")])]),t._v(" "),a("ol",[a("li",[t._v("1 step + 1 step + 1 step")]),t._v(" "),a("li",[t._v("1 step + 2 steps")]),t._v(" "),a("li",[t._v("2 steps + 1 step")])])]),t._v(" "),a("h4",{attrs:{id:"constraints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constraints"}},[t._v("#")]),t._v(" Constraints:")]),t._v(" "),a("blockquote",[a("p",[t._v("1 <= n <= 45")])]),t._v(" "),a("h2",{attrs:{id:"解答思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解答思路"}},[t._v("#")]),t._v(" 解答思路")]),t._v(" "),a("p",[t._v("通过之前的分析我们可以得到一个简单整理如下，方便我们快速找到重复的子问题。")]),t._v(" "),a("ol",[a("li",[t._v("只有1级台阶的时候，我们只有一个走法，即迈1步。我们记为【1：1】")]),t._v(" "),a("li",[t._v("当有2级台阶的时候，我们有2中走法，即迈1步，再迈1步或者直接迈2步。我们记为【2：2】")]),t._v(" "),a("li",[t._v("当有3级台阶的时候，我们可以考虑，如果想要达到第3级台阶，我们可以有两个途径，从第2级迈1步；或者从第1级迈2步。而走法的和就是第1级台阶的走法+第2级台阶的走法")]),t._v(" "),a("li",[t._v("当有4级台阶的时候，我们可以看做，如果想要达到第4级台阶，我们也是有两个途径，从第3级迈1步；或者从第2级迈2步。而走法的和就是第2级台阶的走法+第3级台阶的走法")])]),t._v(" "),a("p",[t._v("这么看下去，这就是非常简单的递归问题，也就是我们常说的斐波那契数列。")]),t._v(" "),a("h3",{attrs:{id:"python"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python"}},[t._v("#")]),t._v(" Python")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("climbStairs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 斐波那契数列的1和2")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 分别定义前3种情况的数值")]),t._v("\n        f1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从3开始")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里有一个小问题，什么是n+1,不是n?")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比如我们要验证的事fn，只有range的第二个参数是n+1的时候，才能进入i==n的这个循环")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            f3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" f1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" f2\n            f1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" f2\n            f2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" f3\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" f3\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);